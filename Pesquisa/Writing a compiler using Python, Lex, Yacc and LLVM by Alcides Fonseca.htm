<!DOCTYPE HTML>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

	
		<meta charset="UTF-8">
		<title> Writing a compiler using Python, Lex, Yacc and LLVM  by 
Alcides Fonseca</title>
		
		<!-- Style -->	
		<link rel="shortcut icon" 
href="http://wiki.alcidesfonseca.com/favicon.ico">
		<link rel="icon" href="http://wiki.alcidesfonseca.com/favicon.ico">
		<link rel="pavatar" 
href="http://alcidesfonseca.com/media/images/alcides_small.png">
		<meta name="viewport" content="width = 320">
		<link rel="stylesheet" 
href="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/alcides-bliki.css">
		<link rel="stylesheet" 
href="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/syntax.css">
				
		<!-- Feeds -->
		<link rel="alternate" type="application/rss+xml" title="Alcides 
Fonseca (pt+en)" href="http://feeds.feedburner.com/alcides">
		<link rel="alternate" type="application/rss+xml" title="Alcides 
Fonseca (en)" href="http://feeds.feedburner.com/alcides/en">
		
		<!-- OpenID -->
		<link rel="openid.server" href="http://www.myopenid.com/server">
		<link rel="openid.delegate" href="http://alcides.myopenid.com/">
	
		<!-- Semantic -->
		<link rel="meta" type="application/rdf+xml" title="FOAF" 
href="http://wiki.alcidesfonseca.com/media/files/foaf.rdf">
		<link rel="search" type="application/opensearchdescription+xml" 
href="http://wiki.alcidesfonseca.com/media/files/opensearch.xml" 
title="Search Alcides Fonseca">

		<!-- HTML5 -->
		<!--[if IE]>
		<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
		<![endif]-->
	<style></style><link 
href="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/styles.css"
 type="text/css" rel="stylesheet"><script src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/general.js" async="" type="text/javascript"></script><script src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/narcissus.js" async="" type="text/javascript"></script><link
 
href="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/thread.css"
 type="text/css" rel="stylesheet"><link 
href="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/narcissus.css"
 type="text/css" rel="stylesheet"></head><body>
		<header>
			<div class="agent vcard author" id="hCard">
				<img class="photo" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/alcides_small.png"
 alt="">
				<h1><a class="url fn uid" rel="me" 
href="http://wiki.alcidesfonseca.com/">Alcides Fonseca</a></h1>
				
				<ul class="links">
					<li><a href="http://wiki.alcidesfonseca.com/about">More about me</a></li>
					<li><a class="email" href="mailto:me@alcidesfonseca.com">Email</a></li>
					<li><a class="email" href="xmpp:alcidesfonseca@gmail.com">XMPP</a></li>
				</ul>
		
				<div style="display: none;">
					<time class="bday" datetime="1988-11-24T01:55:00Z">Nov 24, 1988</time>
					<span class="geo">
						<span class="latitude">40.197958</span>, 
						<span class="longitude">-8.408312</span>
					</span>
				</div>
				
				<div class="clear"></div>
			</div>
		</header>
		<div class="wrap">
			<section>
				
	





<article class="hentry">
	<h3 class="entry-title"><a 
href="http://wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm">Writing
 a compiler using Python, Lex, Yacc and LLVM</a></h3>
	<div class="details">

		<time pubdate="" class="updated date" 
datetime="2009-09-19T23:10:51+00:00">
				<span class="month">Sep</span>
				<span class="day">19</span>
				<span class="year">2009</span>					
		</time>

	</div>
	<div class="text entry-content" lang="en">
		
		    	<p>I found a good post on <a 
href="http://gnuu.org/2009/09/18/writing-your-own-toy-compiler/">how to 
build your own toy compiler using Flex, Bison and LLVM</a>. I saw one 
disadvantage right in the beginning: you had to use C++. If I were just 
prototyping a compiler, I wouldn’t use C++ but rather a dynamic 
language. And last semester for the Compilers course that’s what I did.</p>

	<p>Students were assigned to build a Pascal compiler (actually a 
subset, but not that small) and the tools suggested were Lex, Yacc 
(using the C language) and compiling the code into C. I took a different
 approach and decided to do the project in Python (I actually tried ruby
 first, but the <a href="http://raa.ruby-lang.org/project/ruby-lex/">ruby-lex</a>
 and <a href="http://raa.ruby-lang.org/project/ruby-yacc/">ruby-yacc</a>
 projects didn’t pass my basic tests).</p>

	<p>I wrote the language grammar using <a 
href="http://www.dabeaz.com/ply/">PLY</a> (the lex and yacc DSLs for 
python) and it was pretty simple. As for the <span class="caps">AST</span>
 generation, I had only a class Node that accepted an type and a list of
 arguments while my colleagues using C had to make 1001 structs for each
 kind of node. Not that it wasn’t impossible using C, but dynamic 
languages make the code simpler and more clear.</p>

	<p>For the code generation, I decided to go with <span class="caps">LLVM</span>.
 It is a very promising project. Just take a look at google’s <a 
href="http://code.google.com/p/unladen-swallow/">unladen-swallow</a> or <a
 href="http://www.macruby.org/">macruby</a>, even <a 
href="http://renesd.blogspot.com/2009/09/many-jit-projects-parrot-plans-to-ditch.html">parrot
 is planing on using llvm for their JIT</a>.</p>

	<p>For writing the code in Python, I had to use the <a 
href="http://mdevan.nfshost.com/llvm-py/">llvm-py</a> which I may say 
it’s in a early stages and lacks documentation. That was my major 
problem using. I had only three resources: <a 
href="http://mdevan.nfshost.com/llvm-py/userguide.html">the official 
guide</a>, a <a href="http://llvm.org/devmtg/2008-08-23/py2llvm.pdf">presentation
 in japanese</a> with some source code, and the actual source of the 
project (in C and C++).</p>

	<p>Since every time I got an error in the llvm code generation it 
crashed the program, I had to dig into the source code of the project 
and find that error message and reverse engineer what was wrong with my 
code (usually I was giving values or pointers instead of references and 
vice-versa). So if you are doing something more complex, you actually 
need some C++ reading skills.</p>

	<p>The project however worked, and <a 
href="http://github.com/alcides/pascal-in-python">I’m making it 
available</a> so anyone may use the code as an example until better 
resources are published.</p>
		
		
	</div>
	
	<div class="subpages">
		
		
		
	</div>
	
</article>
	
	<div class="ads">
		
		


<ul id="tla">

</ul>

	</div>
	
	<div class="comments">
		<div id="disqus_thread"><div class="clearfix" style="display: block;" 
id="dsq-content"><div id="dsq-comments-title"><h3>Showing <span 
id="dsq-num-posts">9</span> comments</h3></div><div class="dsq-options"><span
 class="dsq-item-sort">Sort by <select id="dsq-sort-select" 
onchange="Dsq.Thread.sortBy(this.value);"><option value="hot">Popular 
now</option><option value="best">Best Rating</option><option 
value="newest">Newest first</option><option value="oldest" 
selected="selected">Oldest first</option></select>&nbsp;</span><span 
class="dsq-subscribe-email"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/email.png"
 style="width: 12px; height: 12px; vertical-align: middle;">&nbsp;<span 
id="dsq-subscribe"><a href="#" onclick="Dsq.Thread.subscribe(1); return 
false">Subscribe by email</a></span></span><span 
class="dsq-subscribe-rss" style="width: 12px; height: 12px; 
vertical-align: middle;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/bullet-feed.png"
 alt="">&nbsp;<a 
href="http://alcides.disqus.com/alcides_fonseca_writing_a_compiler_using_python_lex_yacc_and_llvm/latest.rss">Subscribe
 by RSS</a></span></div><ul id="dsq-comments">	 <div 
id="comment-16939689"></div><li id="dsq-comment-16939689" 
class="dsq-comment  dsq-odd" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-16939689" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-16939689" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16939689)"><a id="dsq-avatar-16939689"
 class="dsq-avatar" href="http://disqus.com/daveaitel/" 
onclick="Dsq.Popup.popProfile(16939689); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/noavatar92.png"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16939689" class="dsq-comment-cite">	 <span 
id="dsq-author-user-16939689">daveaitel</span>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16939689" 
onclick="Dsq.Popup.permalink(16939689)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-16939689" 
class="dsq-comment-body"><div id="dsq-comment-message-16939689" 
class="dsq-comment-message">Check out MOSDEF 2.0 as well for a working C
 compiler in PLY.</div>	 </div><div class="dsq-comment-footer" 
id="dsq-comment-footer-16939689"><div class="dsq-comment-footer-left"><a
 href="#" id="dsq-post-report-16939689" class="dsq-post-report" 
onclick="Dsq.Post.report(16939689, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16939689" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16939689, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16939689" 
onclick="Dsq.Post.toggleReply(16939689, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16939689"></div>	 <div 
id="comment-16948795"></div><li id="dsq-comment-16948795" 
class="dsq-comment  dsq-even" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-16948795" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-16948795" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16948795)"><a id="dsq-avatar-16948795"
 class="dsq-avatar" 
href="http://disqus.com/guest/64d554f638fdd257918aac4444790d35/" 
onclick="Dsq.Popup.popProfile(16948795); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16948795" class="dsq-comment-cite">	 <a 
id="dsq-author-user-16948795" href="http://iamsheep.blogspot.com/" 
target="_blank" rel="nofollow">hasan</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16948795" 
onclick="Dsq.Popup.permalink(16948795)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-16948795" 
class="dsq-comment-body"><div id="dsq-comment-message-16948795" 
class="dsq-comment-message">Great job Alcides. <br>Where can I get the 
specification of the subset of Pascal you used ?</div>	 </div><div 
class="dsq-comment-footer" id="dsq-comment-footer-16948795"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-16948795" class="dsq-post-report" 
onclick="Dsq.Post.report(16948795, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16948795" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16948795, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16948795" 
onclick="Dsq.Post.toggleReply(16948795, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16948795"></div>	 <div 
id="comment-16950701"></div><li id="dsq-comment-16950701" 
class="dsq-comment  special dsq-special dsq-moderator dsq-odd" 
style="margin-left: 0px;">	 <div id="dsq-comment-header-16950701" 
class="dsq-comment-header"><table><tbody><tr><td 
id="dsq-header-avatar-16950701" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16950701)"><a id="dsq-avatar-16950701"
 class="dsq-avatar" href="http://disqus.com/alcides/" 
onclick="Dsq.Popup.popProfile(16950701); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92_004.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16950701" class="dsq-comment-cite">	 <a 
id="dsq-author-user-16950701" href="http://alcidesfonseca.com/" 
target="_blank" rel="nofollow">alcides</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16950701" 
onclick="Dsq.Popup.permalink(16950701)" title="Permalink">6 months ago</a></span>
 <a onclick="Dsq.Post.showParent(16948795); return false" 
href="#comment-16948795" title="Jump to comment">in reply to hasan</a></td></tr></tbody></table></div><div
 id="dsq-comment-body-16950701" class="dsq-comment-body"><div 
id="dsq-comment-message-16950701" class="dsq-comment-message">Hasan, <br><br>We
 needed variables tyoes (int, real, and strings is a bit buggy), loops 
(for, while, repeat) and arithmetic operators and functions and 
procedures.<br><br>Pretty much this, but we were free to add a few other
 stuff. Just head over to docs/relatorio.textile and scroll down till 
you see the grammar specification.</div>	 </div><div 
class="dsq-comment-footer" id="dsq-comment-footer-16950701"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-16950701" class="dsq-post-report" 
onclick="Dsq.Post.report(16950701, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16950701" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16950701, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16950701" 
onclick="Dsq.Post.toggleReply(16950701, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16950701"></div>	 <div 
id="comment-16981157"></div><li id="dsq-comment-16981157" 
class="dsq-comment  dsq-even" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-16981157" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-16981157" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16981157)"><a id="dsq-avatar-16981157"
 class="dsq-avatar" href="http://disqus.com/Ideal/" 
onclick="Dsq.Popup.popProfile(16981157); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92_002.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16981157" class="dsq-comment-cite">	 <a 
id="dsq-author-user-16981157" href="http://plisk.livejournal.com/" 
target="_blank" rel="nofollow">Alex Dedul</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16981157" 
onclick="Dsq.Popup.permalink(16981157)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-16981157" 
class="dsq-comment-body"><div id="dsq-comment-message-16981157" 
class="dsq-comment-message">Nice article, thank you :)</div>	 </div><div
 class="dsq-comment-footer" id="dsq-comment-footer-16981157"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-16981157" class="dsq-post-report" 
onclick="Dsq.Post.report(16981157, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16981157" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16981157, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16981157" 
onclick="Dsq.Post.toggleReply(16981157, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16981157"></div>	 <div 
id="comment-16986625"></div><li id="dsq-comment-16986625" 
class="dsq-comment  dsq-odd" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-16986625" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-16986625" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16986625)"><a id="dsq-avatar-16986625"
 class="dsq-avatar" 
href="http://disqus.com/guest/03d9445ceed1c27bc651479a9dc2beae/" 
onclick="Dsq.Popup.popProfile(16986625); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92_003.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16986625" class="dsq-comment-cite">	 <a 
id="dsq-author-user-16986625" href="http://www.acooke.org/" 
target="_blank" rel="nofollow">andrew cooke</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16986625" 
onclick="Dsq.Popup.permalink(16986625)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-16986625" 
class="dsq-comment-body"><div id="dsq-comment-message-16986625" 
class="dsq-comment-message">thanks.  i was just looking at llvm 
interfaces in python (i'm hoping to extend lepl so that it integrates 
with the llvm) and  llvm-py looked a bit dead to me.  i don't suppose 
anyone from unladen swallow has contacted you to explain what they are 
using?  perhaps the irllvm interface will be seperable from the python 
language specific parts?</div>	 </div><div class="dsq-comment-footer" 
id="dsq-comment-footer-16986625"><div class="dsq-comment-footer-left"><a
 href="#" id="dsq-post-report-16986625" class="dsq-post-report" 
onclick="Dsq.Post.report(16986625, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16986625" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16986625, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16986625" 
onclick="Dsq.Post.toggleReply(16986625, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16986625"></div>	 <div 
id="comment-16986763"></div><li id="dsq-comment-16986763" 
class="dsq-comment  special dsq-special dsq-moderator dsq-even" 
style="margin-left: 0px;">	 <div id="dsq-comment-header-16986763" 
class="dsq-comment-header"><table><tbody><tr><td 
id="dsq-header-avatar-16986763" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(16986763)"><a id="dsq-avatar-16986763"
 class="dsq-avatar" href="http://disqus.com/alcides/" 
onclick="Dsq.Popup.popProfile(16986763); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92_004.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-16986763" class="dsq-comment-cite">	 <a 
id="dsq-author-user-16986763" href="http://alcidesfonseca.com/" 
target="_blank" rel="nofollow">alcides</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-16986763" 
onclick="Dsq.Popup.permalink(16986763)" title="Permalink">6 months ago</a></span>
 <a onclick="Dsq.Post.showParent(16986625); return false" 
href="#comment-16986625" title="Jump to comment">in reply to andrew 
cooke</a></td></tr></tbody></table></div><div 
id="dsq-comment-body-16986763" class="dsq-comment-body"><div 
id="dsq-comment-message-16986763" class="dsq-comment-message">Andrew, <br><br>Unladen
 swallow is a python implementation in C, and it uses the C++ LLVM 
bindings (the main ones) and some glue to make C++ compatible with C. It
 doesn't expose the llvm interface to your python code, so was useless 
for my project.<br><br>This might actually change and it was interesting
 if you could change some interpreter settings at runtime (thinking 
about some optimizations).</div>	 </div><div class="dsq-comment-footer" 
id="dsq-comment-footer-16986763"><div class="dsq-comment-footer-left"><a
 href="#" id="dsq-post-report-16986763" class="dsq-post-report" 
onclick="Dsq.Post.report(16986763, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-16986763" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 16986763, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-16986763" 
onclick="Dsq.Post.toggleReply(16986763, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-16986763"></div>	 <div 
id="comment-17003806"></div><li id="dsq-comment-17003806" 
class="dsq-comment  dsq-odd" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-17003806" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-17003806" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(17003806)"><a id="dsq-avatar-17003806"
 class="dsq-avatar" 
href="http://disqus.com/guest/1aab9ffa739aa69b19c4a51983f72c2f/" 
onclick="Dsq.Popup.popProfile(17003806); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/noavatar92.png"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-17003806" class="dsq-comment-cite">	 <span 
id="dsq-author-user-17003806">Jon</span>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-17003806" 
onclick="Dsq.Popup.permalink(17003806)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-17003806" 
class="dsq-comment-body"><div id="dsq-comment-message-17003806" 
class="dsq-comment-message">What exactly do you need a dynamic language 
for, to prototype a language/compiler? The bottleneck should ultimately 
be your familiarity with lex/yacc and the LLVM APIs, not your ability to
 do anything interesting with ducktyping. An AST is a very simply typed 
structure regardless of the language it's defined in. As far as I see, 
in the C++ tutorial you linked to, the implementation size would look 
the same in either language, maybe minus the extra (but not entirely 
necessary) overhead of the node header file. The rest of it seemed more 
to do with bison/flex than any C++.<br><br>If your issue is that you're 
uncomfortable using C++, say so, but don't make it sound like C++ is 
somehow inferior here. Memory management is moot since memory leaks are 
irrelevant unless your compiler is also an interpreter, and the STL 
gives you everything Python would in terms of lists, maps and iterators.
 What is Python really giving you that C++ isn't?</div>	 </div><div 
class="dsq-comment-footer" id="dsq-comment-footer-17003806"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-17003806" class="dsq-post-report" 
onclick="Dsq.Post.report(17003806, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-17003806" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 17003806, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-17003806" 
onclick="Dsq.Post.toggleReply(17003806, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-17003806"></div>	 <div 
id="comment-17005150"></div><li id="dsq-comment-17005150" 
class="dsq-comment  dsq-even" style="margin-left: 0px;">	 <div 
id="dsq-comment-header-17005150" class="dsq-comment-header"><table><tbody><tr><td
 id="dsq-header-avatar-17005150" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(17005150)"><a id="dsq-avatar-17005150"
 class="dsq-avatar" 
href="http://disqus.com/guest/1aab9ffa739aa69b19c4a51983f72c2f/" 
onclick="Dsq.Popup.popProfile(17005150); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/noavatar92.png"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-17005150" class="dsq-comment-cite">	 <span 
id="dsq-author-user-17005150">Jon</span>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-17005150" 
onclick="Dsq.Popup.permalink(17005150)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-17005150" 
class="dsq-comment-body"><div id="dsq-comment-message-17005150" 
class="dsq-comment-message">Oh, and as far as your "one Node class" 
goes, you probably traded one class in for a big switch statement 
checking "if type == X do this, if type == Y do this, ...". The benefit 
of building a proper AST that represents each individual node is that 
you get polymorphism and dynamic dispatch handling what you would 
otherwise have to do manually. You also get code clarity, because your 
implementation wouldn't be buried inside if statements. In any case, the
 implementation size for either is still roughly the same. Again, the 
limiting factor is semantics, not syntax.</div>	 </div><div 
class="dsq-comment-footer" id="dsq-comment-footer-17005150"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-17005150" class="dsq-post-report" 
onclick="Dsq.Post.report(17005150, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-17005150" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 17005150, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-17005150" 
onclick="Dsq.Post.toggleReply(17005150, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-17005150"></div>	 <div 
id="comment-17028191"></div><li id="dsq-comment-17028191" 
class="dsq-comment  special dsq-special dsq-moderator dsq-odd" 
style="margin-left: 0px;">	 <div id="dsq-comment-header-17028191" 
class="dsq-comment-header"><table><tbody><tr><td 
id="dsq-header-avatar-17028191" class="dsq-header-avatar" 
onmouseover="Dsq.Post.dropProfile(17028191)"><a id="dsq-avatar-17028191"
 class="dsq-avatar" href="http://disqus.com/alcides/" 
onclick="Dsq.Popup.popProfile(17028191); return false;"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/avatar92_004.jpg"
 alt=""></a></td><td class="dsq-comment-header-meta">	 <cite 
id="dsq-cite-17028191" class="dsq-comment-cite">	 <a 
id="dsq-author-user-17028191" href="http://alcidesfonseca.com/" 
target="_blank" rel="nofollow">alcides</a>	 </cite>	 <img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/moderator.png"
 class="dsq-moderator-star" title="Moderator"><span 
class="dsq-comment-header-time"><a href="#comment-17028191" 
onclick="Dsq.Popup.permalink(17028191)" title="Permalink">6 months ago</a></span>
 </td></tr></tbody></table></div><div id="dsq-comment-body-17028191" 
class="dsq-comment-body"><div id="dsq-comment-message-17028191" 
class="dsq-comment-message">Jon, <br><br>If i can code in Python instead
 of C++ I will. Much more readable and makes me care about the stuff 
that matters. it's more high level and I like that. I never said C++ was
 inferior (actually is the other way, since LLVM was design for C++).<br><br>As
 for the one Node class, I implemented a big if because it was a fast 
prototype. If I wanted it to be a proper compiler, I would probably make
 use of OOP and inheritance, but for the purpose it was okay.</div>	 </div><div
 class="dsq-comment-footer" id="dsq-comment-footer-17028191"><div 
class="dsq-comment-footer-left"><a href="#" 
id="dsq-post-report-17028191" class="dsq-post-report" 
onclick="Dsq.Post.report(17028191, false); return false;">Flag</a></div><div
 class="dsq-comment-footer-right"><span id="dsq-like-17028191" 
class="dsq-like"><button type="button" class="dsq-button-small" 
onclick="Dsq.Post.rate(this, 17028191, 1)">Like</button></span><span 
class="dsq-comment-footer-reply" id="dsq-comment-footer-reply-17028191" 
onclick="Dsq.Post.toggleReply(17028191, this)"><button type="button" 
class="dsq-button-small">Reply</button> <button type="button" 
class="dsq-comment-footer-reply-tab">Reply</button><span></span></span></div></div>
	 </li><div id="dsq-append-post-17028191"></div>	 </ul><div 
style="display: none;" class="dsq-realtime-alert"></div><div 
id="dsq-new-post" class="dsq-post-area"><div class="dsq-dc-logo"><a 
href="http://disqus.com/comments" target="_blank"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/disqus-logo.png"></a></div><h3>Add
 New Comment</h3><div id="dsq-authenticate" class="dsq-authenticate"><p 
class="dsq-autheneticate-copy">You are commenting as a <a 
class="dsq-help" title="Click for more information" href="#" 
onclick="Dsq.Popup.helpBadges(); return false">Guest</a>. Optional: 
Login below.</p><ul class="dsq-login-buttons"><li 
class="dsq-login-button"><a href="#" onclick="Dsq.Popup.login(); return 
false"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/login-disqus.gif"></a></li><li
 class="dsq-login-button"><a href="#" 
onclick="Dsq.Twitter.startTwitterConnect(); return false"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/login-twitter.gif"></a></li><li
 class="dsq-login-button"><a href="#" onclick="Dsq.OpenID.requestURL(); 
return false"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/login-openid.gif"></a></li></ul></div><div
 id="dsq-form-area"><div class="dsq-textarea"><div 
class="dsq-textarea-wrapper" id="dsq-textarea-wrapper"><iframe 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/reply.htm"
 id="child_1269893245673" name="child_1269893245673" 
onload="ParentMessenger._receiver_onload_child_1269893245673();"></iframe></div></div><div
 class="dsq-post-fields"><table><tbody><tr><td 
class="dsq-post-fields-left"><div class="dsq-input-wrapper"><input 
id="dsq-field-name" value="Name" class="dsq-placeholder" 
onfocus="Dsq.Templates.handlePlaceholder(event, this, 'name')" 
onblur="Dsq.Templates.handlePlaceholder(event, this, 'name')" 
type="text"></div></td><td class="dsq-post-fields-right"><div 
class="dsq-input-wrapper"><input id="dsq-field-website" value="Website 
(optional)" class="dsq-placeholder" 
onfocus="Dsq.Templates.handlePlaceholder(event, this, 'website')" 
onblur="Dsq.Templates.handlePlaceholder(event, this, 'website')" 
type="text"></div></td></tr><tr><td class="dsq-post-fields-left"><div 
class="dsq-input-wrapper"><input id="dsq-field-email" value="Email" 
class="dsq-placeholder" onfocus="Dsq.Templates.handlePlaceholder(event, 
this, 'email')" onblur="Dsq.Templates.handlePlaceholder(event, this, 
'email')" type="text"></div></td><td class="dsq-post-fields-right"><div 
class="dsq-subscribe-menu"><label class="dsq-subscribe-label"><input 
id="dsq-subscribe-on-post" type="checkbox"> Subscribe to all comments by
 email</label></div></td></tr></tbody></table></div><div 
class="dsq-post-footer"><div class="dsq-sharing-options" style="display:
 none;"><button type="button" class="dsq-button-small" 
onfocus="document.getElementById('dsq-post-button').focus();"><span 
class="dsq-share-on">Share on&nbsp;<input id="dsq-sharing-twitter-label"
 disabled="true" type="checkbox"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/twitter_002.png">&nbsp;&nbsp;<input
 id="dsq-sharing-facebook-label" disabled="true" type="checkbox"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/facebook.png">
 </span><span class="dsq-share-on-label">Share this comment on...</span></button><div
 class="dsq-panel"><div><a href="http://disqus.com/profile/connections/"
 target="_blank" class="dsq-configure-options">Configure options...</a></div></div></div><button
 type="button" class="dsq-button" id="dsq-post-button" 
onclick="Dsq.Templates.postComment(undefined, this, false)"><span>Post 
as Guest</span></button></div></div></div><h3 id="dsq-reactions-title" 
class="dsq-h3-reactions">Reactions</h3><ul id="dsq-reactions" 
class="dsq-reactions"><li class="dsq-comment dsq-reaction" 
id="dsq-reaction-15656190"><div class="dsq-comment-header"><table><tbody><tr><td
 class="dsq-header-avatar"><a target="_blank" 
href="http://twitter.com/jneira/" class="dsq-avatar"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/auryn1gif1_normal.png"></a></td><td><cite
 class="dsq-comment-cite">jneira</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/twitter.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://twitter.com/jneira/status/4168049664">twitter</a> via <a 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Alcides 
Fonseca: Writing a compiler using Python, Lex, Yacc and LLVM <a 
href="http://wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm">http://tinyurl.com/mrlt3p</a></div></div><div
 class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656184"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=mahmud" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">mahmud</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=834040">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Sorry, I must 
have misunderstood your intent then. Python and Ruby are probably fast 
enough for compiler construction as well; I am sure they could be 
tweaked by an expert to yield acceptable performance, but I am just not 
such expert :-)</div></div><div class="dsq-comment-footer"><div 
class="dsq-comment-footer-left"></div></div></li><li class="dsq-comment 
dsq-reaction" id="dsq-reaction-15656167"><div class="dsq-comment-header"><table><tbody><tr><td
 class="dsq-header-avatar"><a target="_blank" 
href="http://twitter.com/meqif/" class="dsq-avatar"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/me_normal.xml"></a></td><td><cite
 class="dsq-comment-cite">meqif</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/twitter.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://twitter.com/meqif/status/4135515060">twitter</a> via <a 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Alcides 
Fonseca: Writing a compiler using Python, Lex, Yacc and LLVM <a 
href="http://wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">http://ff.im/-8rtZv</a></div></div><div
 class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656185"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=anamax" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">anamax</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833488">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">&gt; you 
really want to have for example floating point to be behaving exactly 
like in target languageYou keep writing that like it's a hard thing to 
do.  It isn't.  More to the point, it's a small part of the whole 
problem.</div></div><div class="dsq-comment-footer"><div 
class="dsq-comment-footer-left"></div></div></li><li class="dsq-comment 
dsq-reaction" id="dsq-reaction-15656160"><div class="dsq-comment-header"><table><tbody><tr><td
 class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=ilkhd2" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">ilkhd2</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833426">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Even if they 
do not need a lot of optimizations, they still have to be fast. You 
would not like the performance would they be written in ruby.And do not 
forget by the way that Ruby is a memory hog.

http://shootout.alioth.debian.org/u32q/benchmark.php?test=al...</div></div><div
 class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656189"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=ilkhd2" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">ilkhd2</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833421">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">And I do not 
know where you saw me saying C is the ultimate language for making 
compilers. I never said that, I do not think so, I just said python/ruby
 are bad for the task.</div></div><div class="dsq-comment-footer"><div 
class="dsq-comment-footer-left"></div></div></li><li class="dsq-comment 
dsq-reaction" id="dsq-reaction-15656159"><div class="dsq-comment-header"><table><tbody><tr><td
 class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=ilkhd2" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">ilkhd2</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833415">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Ok, the 
discussion is becoming pointless: you like ruby for compiler 
construction. Well I'd rather use a language with proper tail recursion,
 algebraic data types, with pattern matching as a part of it, fast, 
strongly typed [I beleive algebraic types with pat. matching gives 
roughly same possibilities as does dyn. typing, for this task], with 
standard or at least big industrial backing behind - such as F# or 
Haskell. And at the end of the day get warm feeling that my code is 
"green" - does not waste joules, by working fast.I appreciate your 
choice, but I'd myself do differently.</div></div><div 
class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656187"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=ilkhd2" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">ilkhd2</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833405">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">Man, you are 
being difficult. Ruby is well known to be a very slow language (if you 
want numbers check 
http://shootout.alioth.debian.org/u32q/benchmark.php?test=al...). 
Optimizing compilers are computationally demanding tasks, and the proof 
(albeit extreme one) is Stalin Scheme compiler, that can take minutes to
 compile code, but the result is sometimes faster than C/C++ code, or at
 least on par. Now, this compiler is written either in Scheme itself or 
in C i do not remember, but definetelt not in ruby. If it take to 
compile your code a minute for a compiler written in [C/Stalin Scheme] 
it will take at least ten minutes for one written in ruby.</div></div><div
 class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656172"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://news.ycombinator.com/user?id=jwecker" class="dsq-avatar"><img
 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews_128.png"></a></td><td><cite
 class="dsq-comment-cite">jwecker</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/hackernews.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://news.ycombinator.com/item?id=833124">hacker news</a> via <a
 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">He mentioned 
that llvm-py documentation was lacking... I was going through it, seems 
pretty darn good to me (relatively). 
http://mdevan.nfshost.com/llvm-py/userguide.html</div></div><div 
class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 class="dsq-comment dsq-reaction" id="dsq-reaction-15656177"><div 
class="dsq-comment-header"><table><tbody><tr><td 
class="dsq-header-avatar"><a target="_blank" 
href="http://twitter.com/upadhyayabhinav/" class="dsq-avatar"><img 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/twitterProfilePhoto_normal.xml"></a></td><td><cite
 class="dsq-comment-cite">upadhyayabhinav</cite> <span 
class="dsq-comment-header-time">6 months ago</span></td><td 
class="dsq-comment-header-likes"></td></tr></tbody></table></div><div 
class="dsq-reaction-header"><table><tbody><tr><td 
class="dsq-reaction-header-left"><img class="dsq-service-icon" 
src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/twitter.png">
 From <a class="dsq-service-name" target="_blank" 
href="http://twitter.com/upadhyayabhinav/status/4123502737">twitter</a> 
via <a 
href="http://www.backtype.com/search?q=http%3A//wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">BackType</a></td><td
 class="dsq-reaction-header-right"></td></tr></tbody></table></div><div 
class="dsq-comment-body"><div class="dsq-comment-message">@niteshsinha 
probably you will find this useful
<a 
href="http://wiki.alcidesfonseca.com/blog/writing-compiler-using-python-lex-yacc-and-llvm/">http://bit.ly/4PKvx</a></div></div><div
 class="dsq-comment-footer"><div class="dsq-comment-footer-left"></div></div></li><li
 id="dsq-show-more-reactions" class="dsq-show-more-reactions"><button 
type="button" class="dsq-button-small" 
onclick="Dsq.Utils.execScript('http://disqus.com/forums/alcides/more_reactions.js?t=35124915&amp;s=0&amp;l=10',
 true); return false;">Show more reactions</button></li></ul></div><div 
style="display: none;" id="dsq-content-stub">Loading comments...<div 
style="height: 15px; width: 300px; border: 1px solid rgb(153, 153, 153);
 background-color: rgb(255, 255, 255); margin: 10px 0pt;"><div 
style="height: 15px; width: 300px; background-color: rgb(212, 228, 
255);" id="dsq-content-progress">&nbsp;</div></div><div 
style="font-size: 8pt; display: none;" id="dsq-loading-problem"><a 
href="#" onclick="dsq_report_staticjs_problem(); return false;">Problems
 loading Disqus?</a></div></div></div>
		<script type="text/javascript" src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/embed.js"></script>
		<noscript><a href="http://alcides.disqus.com/?url=ref">View comments.</a></noscript>
	</div>

			</section>
			
			<footer>
				
					<p class="copyright">© 2010 Alcides Aguiar Fonseca.</p>
					<p> This wiki is powered by <a 
href="http://wiki.alcidesfonseca.com/django">Django</a> and is deployed 
at <a href="http://wiki.alcidesfonseca.com/slicehost">Slicehost</a> 
using <a href="http://www.modrails.com/">Passenger Fusion (mod_rails)</a>.</p>
				
			</footer>
		</div>
		
		<!-- Stats -->
		<script type="text/javascript" src="Writing%20a%20compiler%20using%20Python,%20Lex,%20Yacc%20and%20LLVM%20by%20Alcides%20Fonseca_arquivos/jsserv.htm"></script>
		<script type="text/javascript">
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
		</script><script src="reply_data/ga.js" type="text/javascript"></script>
		<script type="text/javascript">
		try {
		var pageTracker = _gat._getTracker("UA-2046573-4");
		pageTracker._trackPageview();
		} catch(err) {}</script>
		
		
	</body></html>